//  Be sure to give permission WRITE_EXTERNAL_STORAGE

import android.os.Environment;
import android.Manifest; 
import android.content.pm.PackageManager; 
import android.os.Build; 
import android.os.Build.VERSION_CODES; 
import processing.core.PConstants;
import android.app.Activity; 
import android.os.Environment;
Table table; 

Activity activity; 
boolean permissions_granted;
boolean file_saved;
String str_1, str_2;
String tableFile;
String tableFolder;

void setup() { 
  size(displayWidth, displayHeight);
  activity = this.getActivity();
  if (Build.VERSION.SDK_INT > Build.VERSION_CODES.LOLLIPOP_MR1) { 
    requestParticularPermission();
  }
  textAlign(CENTER);
  str_1 = "Click to save a table.";
  str_2 = "Table saved on SD card.";
  textSize(12);
  float twf = width/textWidth(str_1);
  textSize(8*twf);
  table = new Table(); 
  table.addColumn("id"); 
  table.addColumn("species"); 
  table.addColumn("name"); 
  TableRow newRow = table.addRow(); 
  newRow.setInt("id", table.getRowCount() - 1); 
  newRow.setString("species", "Panthera leo"); 
  newRow.setString("name", "Lion"); 
  // Folowing file name is the folder you save your table file in.
  // If it does not exist it will be created automatically
  tableFolder = "MyTables";
  // Folowing string is the name of your table file
  // Be sure to include extension.
  tableFile = "MyTable.csv";
}

void draw() {
  background(0, 0, 200);
  if (file_saved) text(str_2, width/2, height/2);
  else text(str_1, width/2, height/2);
}

void mousePressed () {
  saveMyTable(tableFolder, tableFile);
}

void saveMyTable(String sf, String tf) { 
  try { 
    String absolute_path = new String(Environment.getExternalStorageDirectory().getAbsolutePath()); 
    File file = new File(absolute_path+"/"+sf); 
    println(file);
    if (!file.exists()) { 
      boolean success = true; 
      success = file.mkdirs();
    } 
    saveTable(table, file+"/"+tf);
    println("File saved successfully.");
    file_saved = true;
  } 
  catch (Exception e) { 
    println("Error while saving file: " + e);
  }
} 


private static String[] PERMISSIONS_STORAGE = { Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.WRITE_EXTERNAL_STORAGE }; 
private void requestParticularPermission() { 
  activity.requestPermissions(PERMISSIONS_STORAGE, 2020);
}

public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) { 
  switch (requestCode) { 
  case 2020: 
    if (grantResults[0] == PackageManager.PERMISSION_GRANTED) { 
      println("permissions granted");
      permissions_granted = true;
    } else { 
      println("permissions not granted");
    } 
    break; 
  default: 
    activity.onRequestPermissionsResult(requestCode, permissions, grantResults);
  }
}

void onStop() {
  file_saved = false;
}

void onPause() {
  file_saved = false;
}
